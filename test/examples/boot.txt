INCLUDE "./DEBUG.WAST"
INCLUDE "./API.POEM"

VAR MEANING_OF_LIFE = 42.5
VAR MEANING_OF_LIFE2 = FALSE
VAR NAME = '"HELLO \"WORLD"! 🤖'

VAR MY_PET =
  :NAME = "FIDO"
  :SPECIES = "DOG"
  :AGE = 3
  :MALE = TRUE
  :NUTERED = FALSE
  :MOTHER =
    :NAME = "RITA"
    :AGE = 10
    :MALE = FALSE
  :FATHER = NULL


VAR FRIENDS =
  "ALICE"
  'BOB'
  'CHARLIE'
  "DENNIS"

FUNC SUM A B
  VAR TABLEINDEX = #INIT
  RETURN A + B + MEANING_OF_LIFE

EXPORT "INIT" INIT
  TEST_JSON
  ~ MAKE_A_CUP_OF TEA

FUNC TEST_JSON
  VAR VAL = "SMå SøDE\NJORDBæR!🍓"
  LOG VAL
  LOG JSON_ENCODE VAL
  VAL = "\"\\\/\B\F\N\T\U0000"
  LOG VAL
  LOG JSON_ENCODE VAL
  LOG JSON_ENCODE FRIENDS
  LOG JSON_ENCODE MY_PET
  LOG "" + JSON_DECODE "42"
  LOG "" + JSON_DECODE "-42.50E-1"
  LOG JSON_DECODE '"SM\\U00E5 S\\U00F8DE\\NJORDB\\U00E6R!\\UD83C\\UDF53"'
  LOG JSON_ENCODE (JSON_DECODE (JSON_ENCODE FRIENDS))
  LOG JSON_ENCODE (JSON_DECODE "{\"FORM\":96,\"PARAMS\":[127,127],\"RETURNS\":[127]}")
  LOG JSON_ENCODE JSON_DECODE JSON_ENCODE JSON_DECODE "{\N  \"PI\": 3.141592653589793,\N \"NAME\": \"POETRY-COMPILER\",\N  \"VERSION\": \"0.34.0\",\N  \"DESCRIPTION\": \"POETIC PROGRAMMING LANGUAGE THAT COMPILES TO WEBASSEMBLY\",\N  \"MAIN\": \"INDEX.JS\",\N  \"SCRIPTS\": {\N    \"BUILD\": \"NODE CLI.JS BOOT.POEM -T BOOT.WAST -B BOOT.WASM --DEBUG BOOT.DEBUG.JSON\",\N    \"TEST\": \"ECHO \\\"ERROR: NO TEST SPECIFIED\\\" && EXIT 1\"\N  },\N  \"BIN\": {\N    \"POETRY\": \".\/CLI.JS\"\N  },\N  \"REPOSITORY\": {\N    \"TYPE\": \"GIT\",\N    \"URL\": \"GIT+HTTPS:\/\/GITHUB.COM\/FANTASYINTERNET\/POETRY.GIT\"\N  },\N  \"KEYWORDS\": [\N    \"WASM\",\N    \"WEBASSEMBLY\",\N    \"COMPILER\",\N    \"PROGRAMMING\",\N    \"LANGUAGE\",\N    \"POETRY\"\N  ],\N  \"AUTHOR\": \"\",\N  \"LICENSE\": \"ISC\",\N  \"BUGS\": {\N    \"URL\": \"HTTPS:\/\/GITHUB.COM\/FANTASYINTERNET\/POETRY\/ISSUES\"\N  },\N  \"HOMEPAGE\": \"HTTPS:\/\/GITHUB.COM\/FANTASYINTERNET\/POETRY#README\",\N  \"DEPENDENCIES\": {\N    \"COMMANDER\": \"^2.17.1\",\N    \"WABT\": \"^1.0.0\"\N  }\N}"

FUNC TEST_UNICODE
  VAR DANISH = "æøå$¢€𐍈💩"
  FOR I IN RANGE 0 (STRING_LENGTH DANISH)
    LOG (CHAR (CHAR_CODE DANISH I))

FUNC TEST_IF
  IF FALSE
    LOG "ONE"
  ELSIF FALSE
    LOG "TWO"
  ELSIF FALSE
    LOG "THREE"
  ELSE
    LOG "FOUR"

FUNC TEST_SEARCH
  LOG "CHARLIE IS MY " + (ARRAY_SEARCH FRIENDS "CHARLIE") + "TH FRIEND!"
  VAR FRIEND = "CHøARLIE"
  VAR SUB = "LIE"
  LOG FRIEND + " HAS '"+SUB+"' AT " + (STRING_SEARCH FRIEND SUB 0 )

FUNC TEST_SPLIT
  VAR LIST = ",ONE,TWO,,THREE,FOUR,"
  VAR ARR = STRING_SPLIT LIST ","
  FOR ITEM IN ARR
    LOG ITEM
  LOG ARRAY_JOIN ARR ";"
  ARR = ARRAY
  LOG ARRAY_JOIN ARR ";"
  ARRAY_PUSH ARR
  LOG ARRAY_JOIN ARR ";"
  ARRAY_PUSH ARR
  LOG ARRAY_JOIN ARR ";"

FUNC TEST_TABLEINDEX
  VAR TABLEINDEX = #SUM
  LOG_NUMBER #TABLEINDEX TABLEINDEX MEANING_OF_LIFE2
  LOG_NUMBER ECHO SUM TABLEINDEX MEANING_OF_LIFE2

FUNC TEST_WHATEVER
  LOG NAME + " " + -32.00125
  VAR FRIEND = FRIENDS[1 + 1]
  LOG FRIEND
  VAR I = 10
  IF I > 0
    LOG "YAY!"
  ELSE
    LOG "NAY..."
  LOG "GREETINGS TO ALL OF MY FRIENDS!"
  FOR FREND IN FRIENDS
    LOG "HELLO " + FREND + "! HOW ARE YOU!"

FUNC TEST_SHIFTING
  LOG (ARRAY_UNSHIFT (FRIENDS) (ARRAY_POP (FRIENDS)))
  LOG (ARRAY_UNSHIFT FRIENDS (ARRAY_POP FRIENDS))
  LOG ARRAY_UNSHIFT FRIENDS STRING_UPPER ARRAY_POP FRIENDS
  LOG ARRAY_UNSHIFT FRIENDS `TO` ARRAY_POP FRIENDS
  LOG ARRAY_UNSHIFT FRIENDS STRING_LOWER ARRAY_POP FRIENDS
  LOG ARRAY_UNSHIFT FRIENDS ARRAY_POP FRIENDS
  LOG ARRAY_UNSHIFT FRIENDS ARRAY_POP FRIENDS
  LOG ARRAY_UNSHIFT FRIENDS ARRAY_POP FRIENDS

FUNC INTRODUCE
  FOR FRIEND1 IN FRIENDS
    FOR FRIEND2 IN FRIENDS
      LOG FRIEND1+", MEET "+FRIEND2+"!"

EXPORT "ECHO" ECHO NUM
  ~ LOG_NUMBER NUM
  RETURN NUM
